schema: "1"
id: services-template
metadata:
 description: Service Template. Generates Deployment, Replicaset and POD
 name: Service Deployment Template
 owner: marcelo.lima@bexsbanco.com.br
 scope: 
  - global
protected: false
variables:
 - name: namespace
   description: The target namespace where the service will be deployed
   defaultValue: payments-stage
 - name: service_name
   description: The service name
 - name: jenkinsjob
   description: The Jenkins job path
   defaultValue: payment-service/job/stage
 - name: application
   description: The application name
   defaultValue: paymentstage
 - name: jenkins_test_job
   description: The Jenkins job path to the automated test
   default: payment-test/job/stage
configuration:
 concurrentExecutions:
  limitConcurrent: true
 triggers: 
  - enabled: true
    job: payment-service/job/boleto
    master: jenkins
    propertyFile: "spinnaker.properties"
    type: jenkins
stages:
 - id: Deploy to Stage
   refId: 1
   type: deployManifest
   stageTimeoutMs: 60000
   manifestArtifactAccount: embedded-artifact
   config:
    manifestSource: text
    account: spinnaker-service-account
    cloudProvider: kubernetes
    moniker:
      app: "{{application}}"
    manifests:
    - apiVersion: v1
      kind: Service
      metadata:
        name: "{{service_name}}-service"
        namespace: "{{namespace}}"
      spec:
        type: ClusterIP
        selector:
          app:  "{{service_name}}"
        ports:
          - name: http
            port: 8080
            targetPort: 8080
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: "{{service_name}}-deployment"
        namespace: "{{namespace}}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: "{{service_name}}"
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: "{{service_name}}"
          spec:
            containers:
              - image: "${ trigger[\"properties\"][\"ci.image\"] }"
                imagePullPolicy: IfNotPresent
                name: "{{service_name}}"
                volumeMounts: 
                  - mountPath: /secret
                    name: datastore
            restartPolicy: "Always"
            volumes:
              - name: datastore
                secret:
                  secretName: datastore-cert
 - id: Automated Tests
   refId: 2
   dependsOn:
    - Deploy to Stage
   continuePipeline: false
   stageTimeoutMs: 60000
   type: jenkins
   failPipeline: true
   config:
     job: payments-tests/job/stage
     master: jenkins
     name: Automated Tests