schema: "1"
id: services-template
metadata:
 description: Service Template. Generates Deployment, Replicaset and POD
 name: Service Deployment Template
 owner: marcelo.lima@bexsbanco.com.br
 scope: 
  - global
protected: false
variables:
 - name: namespace
   description: The target namespace where the service will be deployed
 - name: jenkinsjob
   description: The Jenkins job path
   defaultValue: payment-service/job/boleto
configuration:
 concurrentExecutions:
  limitConcurrent: true
 triggers: 
  - enabled: true
    job: payment-service/job/boleto
    master: jenkins
    propertyFile: "spinnaker.properties"
    type: jenkins
stages:
 - id: deployTest
   type: deployManifest
   stageTimeoutMs: 60000
   config:
    manifestSource: text
    account: spinnaker-service-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: v1
      kind: Service
      metadata:
        name: payment-service 
        namespace: payments-stage
      spec:
            type: ClusterIP
            selector:
              app: payment
            ports:
              - name: http
                port: 8080
                targetPort: 8080
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: payment-deployment,
        namespace: payments-stage
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: payment
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
          type: RollingUpdate
          template:
          metadata:
            labels:
              app: payment
          spec:
            containers:
              - image: "${ trigger[\"properties\"][\"ci.image\"] }"
                imagePullPolicy: IfNotPresent
                name: payment-service,
                volumeMounts: 
                  - mountPath: "/secret"
                    name: "datastore"
            restartPolicy: "Always"
            volumes: 
              - name: datastore
                secret:
                secretName": datastore-cert
