schema: "1"
id: services-template
metadata:
 description: Service Template. Generates Deployment, Replicaset and POD
 name: Service Deployment Template
 owner: marcelo.lima@bexsbanco.com.br
 scope: 
  - global
protected: false
variables:
 - name: namespace
   description: The target namespace where the service will be deployed
   defaultValue: payments
 - name: service_name
   description: The service name
 - name: stageConfigVersion
   description: The environment configmap version
 - name: sandboxConfigVersion
   description: The environment configmap version
 - name: productionConfigVersion
   description: The production configmap version
 - name: jenkinsjob
   description: The Jenkins job path
   defaultValue: payment-service/job/develop
 - name: application
   description: The application name
   defaultValue: paymentstage
 - name: jenkins_test_job
   description: The Jenkins job path to the automated test
   defaultValue: payments-tests/job/develop
 - name: service_port_name
   description: The name of the service port
   defaultValue: http
 - name: service_port
   description: the external service port
   defaultValue: 8080
 - name: balancer
   description: The type of the loadbalancer
   defaultValue: ClusterIP
configuration:
 concurrentExecutions:
  limitConcurrent: true
 triggers: 
  - enabled: true
    job: "{{jenkinsjob}}"
    master: jenkins
    propertyFile: "spinnaker.properties"
    type: jenkins
stages:
 - id: Deploy to Stage
   refId: 1
   type: deployManifest
   stageTimeoutMs: 60000
   manifestArtifactAccount: embedded-artifact
   config:
     {% module kubeservice name=service_port_name port=service_port type=http namespace=namespace application=application balancer=balancer config=stageConfigVersion %}
 
modules:
 - id: kubeservice
   usage: apenas um teste
   variables:
    - name: name
    - name: type
    - name: port
    - name: namespace
    - name: application
    - name: balancer
    - name: config
   definition: 
    manifestSource: text
    account: spinnaker-service-account
    cloudProvider: kubernetes
    notifications:
    - address: "bexspay-team"
      level: "stage"
      type: "slack"
      when: 
      - "stage.failed"
    sendNotifications: true
    moniker:
      app: "{{application}}"
    manifests:
    - apiVersion: v1
      kind: Service
      metadata:
        name: "{{name}}-service"
        namespace: "{{namespace}}-stage"
      spec:
        type: "{{balancer}}"
        selector:
          app:  "{{name}}"
        ports:
          - name: "{{type}}"
            port: "{{port}}"
            targetPort: "{{port}}"
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: "{{name}}-deployment"
        namespace: "{{namespace}}-stage"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: "{{name}}"
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: "{{name}}"
          spec:
            containers:
              - image: "asdfasdfasdf" #${ trigger[\"properties\"][\"ci.image\"] }
                imagePullPolicy: IfNotPresent
                name: "{{name}}"
                volumeMounts: 
                  - mountPath: /secret
                    name: datastore
                envFrom:
                  - configMapRef:
                      name: "env-config-{{config}}"
            restartPolicy: "Always"
            volumes:
              - name: datastore
                secret:
                  secretName: datastore-cert